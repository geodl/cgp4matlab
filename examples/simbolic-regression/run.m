cgp = cgptoolbox.CGP(struct( ...
	'rows', 1, ...
	'columns', 16, ...
	'levels_back', 16, ...
	'last_node_output', true, ...
	'runs', 1, ...
	'outputs', 1, ...
	'generations', 2000, ...
	'population', 4, ...
	'mutation', 0.1, ...
	'fitness_solution', 0.1, ...
    'fitness_operator', '<=' ...
));

a.x = zeros(1, 50);
a.y = zeros(1, 50);
index = 1;
for x = -1:0.04:1
    a.y(index) = x^6 - 2*x^4 + x^2;
    a.x(index) = x;
    index = index + 1;
end

input = struct('a', a, 'b', 1);

cgp.addInputs( ...
    struct( ...
        'first', input, ...
        'second', 1 ...
    ) ...
);

cgp.addParameters( ...
	struct(                                ...
		'name', 'interval',                ...
		'initialize', @()rand(),           ...
		'mutate', @(x)rand()               ...
	) ...
);

cgp.addFunctionsFromPath('function-set/');
cgp.addFitnessFunction(@fitness);

cgp.train();
